<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>
  <system.serviceModel>

    <bindings>
      <!--<wsHttpBinding>
        <binding name="ServiceBinding">
          <security mode="Message">
            <message clientCredentialType="UserName"/>
          </security>

          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"
            negotiateServiceCredential="false" algorithmSuite="Default"
            establishSecurityContext="false" />
          </security>

        </binding>
      </wsHttpBinding>-->

      <wsHttpBinding>
        <binding name="secureTransportBinding">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
        <binding name="customSecurityBinding">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    
    <behaviors>
      <!--<serviceBehaviors>
        <behavior name="customBehavior">
           Legen Sie die Werte unten vor der Bereitstellung auf "false" fest, um die Veröffentlichung von Metadateninformationen zu vermeiden. 
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
           Damit in Fehlern Ausnahmedetails zum Debuggen angezeigt werden, legen Sie den Wert unten auf "true" fest. Legen Sie ihn vor der Bereitstellung auf "false" fest, um die Veröffentlichung von Ausnahmeinformationen zu vermeiden. 
          <serviceDebug includeExceptionDetailInFaults="false"/>

          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="Cocktailizr.Auth.AuthPolicy, Cocktailizr" />
            </authorizationPolicies>
          </serviceAuthorization>

          <serviceCredentials>
            <serviceCertificate findValue="COCKTAILIZR" x509FindType="FindBySubjectName" storeLocation="LocalMachine" storeName="My" />
            
            <userNameAuthentication userNamePasswordValidationMode="Custom"
                                    customUserNamePasswordValidatorType="Cocktailizr.Auth.UserAuthentication, Cocktailizr"/>
          </serviceCredentials>

        </behavior>
      </serviceBehaviors>-->

      <serviceBehaviors>
        <!--<behavior name="secureTransportServiceBehavior">
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>-->
        <behavior name="customSecurityServiceBehavior">
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="Cocktailizr.Auth.UserAuthentication, Cocktailizr" />
          </serviceCredentials>
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="Cocktailizr.Auth.AuthPolicy, Cocktailizr" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
      </serviceBehaviors>
      
    </behaviors>
    <protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

    <services>

      <service name="Cocktailizr.Service.Impl.AdminService" behaviorConfiguration="customSecurityServiceBehavior">
        <endpoint address="" bindingConfiguration="customSecurityBinding"
                  binding="wsHttpBinding" 
                  contract ="Cocktailizr.Service.IAdminService">
        </endpoint>
        <endpoint contract="IMetadataExchange"
              binding="mexHttpBinding"
              address="mex" />
      </service>
      <service name="Cocktailizr.Service.Impl.CocktailService" behaviorConfiguration="customSecurityServiceBehavior">
        <endpoint address="" bindingConfiguration="customSecurityBinding"
                  binding="wsHttpBinding"
                  contract ="Cocktailizr.Service.ICocktailService">
        </endpoint>
        <endpoint contract="IMetadataExchange"
              binding="mexHttpBinding"
              address="mex" />
      </service>
    </services>

  </system.serviceModel>
  <system.webServer>
    <!--<modules runAllManagedModulesForAllRequests="true"/>
    
        Um das Stammverzeichnis der Webanwendung beim Debuggen auszuwählen, legen Sie den Wert unten auf "true" fest.
        Legen Sie ihn vor der Bereitstellung auf "false" fest, um die Veröffentlichung von Informationen über den Webanwendungsordner zu vermeiden.-->
      
    <directoryBrowse enabled="true"/>
  </system.webServer>
  <connectionStrings>
    <add connectionString="mongodb://localhost" name="CocktailizrDb" providerName="MongoDB"/>
  </connectionStrings>
  

</configuration>
